## set prefix key
#unbind C-b
#set-option -g prefix C-Space

# status bar
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'
set -g status-position top
set -g status-justify left
set -g status-left ''

# reload tmux config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Enable mouse control
set -g mouse on

# get color to work
set -g default-terminal "screen-256color"

# pane movement
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

## window split binds
#unbind v
#unbind h
#
#unbind %
#unbind '"'
#
#bind h split-window -v -c "#{pane_current_path}"
#bind v split-window -h -c "#{pane_current_path}"
## https://github.com/tmux/tmux/issues/213

# move between panes with vim motions
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

set -g history-limit 100000

#unbind n
#unbind w

#bind n command-prompt "rename-window '%%'"
#bind w new-window -c "#{pane_current_path}"

set -g base-index 1
set-window-option -g pane-base-index 1

bind -n M-j previous-window
bind -n M-k next-window

unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"
# to use xclip instead of xsel uncomment
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"`

# this should help fix problems with cursor in neovim
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

## Smart pane switching with awareness of Vim splits.
## See: https://github.com/christoomey/vim-tmux-navigator
#
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
#bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
#bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
#bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# toggle multi pane cursor
bind C-x setw synchronize-panes \; display "Toggle synchronize-panes"

# clear screen
bind-key C-l send-keys -R \; send-keys C-l

setw -g mode-keys vi

# By default, all windows in a session are constrained to the size of the smallest 
# client connected to that session, even if both clients are looking at different windows.
# The window is only constrained in size if a smaller client is actively looking at it.
set -g aggressive-resize on
